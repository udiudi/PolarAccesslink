=begin
#Polar Accesslink API

#Polar Accesslink API documentation

OpenAPI spec version: 3.59.0
Contact: b2bhelpdesk@polar.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.16

=end

require 'uri'

module PolarAccesslink
  class NightlyRechargeApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List Nightly Recharges
    # List Nightly Recharge data of user for the last 28 days.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def list_nightly_recharge(opts = {})
      list_nightly_recharge_with_http_info(opts)
      nil
    end

    # List Nightly Recharges
    # List Nightly Recharge data of user for the last 28 days.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def list_nightly_recharge_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NightlyRechargeApi.list_nightly_recharge ...'
      end
      # resource path
      local_var_path = '/v3/users/nightly-recharge'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NightlyRechargeApi#list_nightly_recharge\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Nightly Recharge
    # Get Users Nightly Recharge data for given date.
    # @param date Date of Nightly Recharge as ISO-8601 date string, example: \&quot;2020-01-01\&quot;
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def v3_users_nightly_recharge_date_get(date, opts = {})
      v3_users_nightly_recharge_date_get_with_http_info(date, opts)
      nil
    end

    # Get Nightly Recharge
    # Get Users Nightly Recharge data for given date.
    # @param date Date of Nightly Recharge as ISO-8601 date string, example: \&quot;2020-01-01\&quot;
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def v3_users_nightly_recharge_date_get_with_http_info(date, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: NightlyRechargeApi.v3_users_nightly_recharge_date_get ...'
      end
      # verify the required parameter 'date' is set
      if @api_client.config.client_side_validation && date.nil?
        fail ArgumentError, "Missing the required parameter 'date' when calling NightlyRechargeApi.v3_users_nightly_recharge_date_get"
      end
      # resource path
      local_var_path = '/v3/users/nightly-recharge/{date}'.sub('{' + 'date' + '}', date.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NightlyRechargeApi#v3_users_nightly_recharge_date_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
