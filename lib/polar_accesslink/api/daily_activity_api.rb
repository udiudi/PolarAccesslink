=begin
#Polar Accesslink API

#Polar Accesslink API documentation

OpenAPI spec version: 3.59.0
Contact: b2bhelpdesk@polar.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.16

=end

require 'uri'

module PolarAccesslink
  class DailyActivityApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Commit transaction
    # After successfully retrieving activity summary data within a transaction, partners are expected to commit the transaction.
    # @param transaction_id Transaction identifier
    # @param user_id User identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def commit_activity_transaction(transaction_id, user_id, opts = {})
      commit_activity_transaction_with_http_info(transaction_id, user_id, opts)
      nil
    end

    # Commit transaction
    # After successfully retrieving activity summary data within a transaction, partners are expected to commit the transaction.
    # @param transaction_id Transaction identifier
    # @param user_id User identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def commit_activity_transaction_with_http_info(transaction_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DailyActivityApi.commit_activity_transaction ...'
      end
      # verify the required parameter 'transaction_id' is set
      if @api_client.config.client_side_validation && transaction_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_id' when calling DailyActivityApi.commit_activity_transaction"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DailyActivityApi.commit_activity_transaction"
      end
      # resource path
      local_var_path = '/v3/users/{user-id}/activity-transactions/{transaction-id}'.sub('{' + 'transaction-id' + '}', transaction_id.to_s).sub('{' + 'user-id' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DailyActivityApi#commit_activity_transaction\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create transaction
    # Initiate activity transaction. Check for new activity summaries and create a new transaction if found.
    # @param user_id User identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def create_activity_transaction(user_id, opts = {})
      create_activity_transaction_with_http_info(user_id, opts)
      nil
    end

    # Create transaction
    # Initiate activity transaction. Check for new activity summaries and create a new transaction if found.
    # @param user_id User identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_activity_transaction_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DailyActivityApi.create_activity_transaction ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DailyActivityApi.create_activity_transaction"
      end
      # resource path
      local_var_path = '/v3/users/{user-id}/activity-transactions'.sub('{' + 'user-id' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DailyActivityApi#create_activity_transaction\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get activity summary
    # @param user_id User identifier
    # @param transaction_id Transaction identifier
    # @param activity_id Activity summary identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_activity_summary(user_id, transaction_id, activity_id, opts = {})
      get_activity_summary_with_http_info(user_id, transaction_id, activity_id, opts)
      nil
    end

    # Get activity summary
    # @param user_id User identifier
    # @param transaction_id Transaction identifier
    # @param activity_id Activity summary identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_activity_summary_with_http_info(user_id, transaction_id, activity_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DailyActivityApi.get_activity_summary ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DailyActivityApi.get_activity_summary"
      end
      # verify the required parameter 'transaction_id' is set
      if @api_client.config.client_side_validation && transaction_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_id' when calling DailyActivityApi.get_activity_summary"
      end
      # verify the required parameter 'activity_id' is set
      if @api_client.config.client_side_validation && activity_id.nil?
        fail ArgumentError, "Missing the required parameter 'activity_id' when calling DailyActivityApi.get_activity_summary"
      end
      # resource path
      local_var_path = '/v3/users/{user-id}/activity-transactions/{transaction-id}/activities/{activity-id}'.sub('{' + 'user-id' + '}', user_id.to_s).sub('{' + 'transaction-id' + '}', transaction_id.to_s).sub('{' + 'activity-id' + '}', activity_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DailyActivityApi#get_activity_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get step samples
    # Get activity step samples. Example data can be seen from [appendix](#activity-step-time-series).
    # @param user_id User identifier
    # @param transaction_id Transaction identifier
    # @param activity_id Activity summary identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_step_samples(user_id, transaction_id, activity_id, opts = {})
      get_step_samples_with_http_info(user_id, transaction_id, activity_id, opts)
      nil
    end

    # Get step samples
    # Get activity step samples. Example data can be seen from [appendix](#activity-step-time-series).
    # @param user_id User identifier
    # @param transaction_id Transaction identifier
    # @param activity_id Activity summary identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_step_samples_with_http_info(user_id, transaction_id, activity_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DailyActivityApi.get_step_samples ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DailyActivityApi.get_step_samples"
      end
      # verify the required parameter 'transaction_id' is set
      if @api_client.config.client_side_validation && transaction_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_id' when calling DailyActivityApi.get_step_samples"
      end
      # verify the required parameter 'activity_id' is set
      if @api_client.config.client_side_validation && activity_id.nil?
        fail ArgumentError, "Missing the required parameter 'activity_id' when calling DailyActivityApi.get_step_samples"
      end
      # resource path
      local_var_path = '/v3/users/{user-id}/activity-transactions/{transaction-id}/activities/{activity-id}/step-samples'.sub('{' + 'user-id' + '}', user_id.to_s).sub('{' + 'transaction-id' + '}', transaction_id.to_s).sub('{' + 'activity-id' + '}', activity_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DailyActivityApi#get_step_samples\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get zone samples
    # Get activity zone samples. Example data can be seen from [appendix](#activity-zone-time-series).
    # @param user_id User identifier
    # @param transaction_id Transaction identifier
    # @param activity_id Activity summary identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_zone_samples(user_id, transaction_id, activity_id, opts = {})
      get_zone_samples_with_http_info(user_id, transaction_id, activity_id, opts)
      nil
    end

    # Get zone samples
    # Get activity zone samples. Example data can be seen from [appendix](#activity-zone-time-series).
    # @param user_id User identifier
    # @param transaction_id Transaction identifier
    # @param activity_id Activity summary identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_zone_samples_with_http_info(user_id, transaction_id, activity_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DailyActivityApi.get_zone_samples ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DailyActivityApi.get_zone_samples"
      end
      # verify the required parameter 'transaction_id' is set
      if @api_client.config.client_side_validation && transaction_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_id' when calling DailyActivityApi.get_zone_samples"
      end
      # verify the required parameter 'activity_id' is set
      if @api_client.config.client_side_validation && activity_id.nil?
        fail ArgumentError, "Missing the required parameter 'activity_id' when calling DailyActivityApi.get_zone_samples"
      end
      # resource path
      local_var_path = '/v3/users/{user-id}/activity-transactions/{transaction-id}/activities/{activity-id}/zone-samples'.sub('{' + 'user-id' + '}', user_id.to_s).sub('{' + 'transaction-id' + '}', transaction_id.to_s).sub('{' + 'activity-id' + '}', activity_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DailyActivityApi#get_zone_samples\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List activities
    # List new activity data. After successfully initiating a transaction, activity summaries included within it can be retrieved with the provided transactionId.
    # @param transaction_id Transaction identifier
    # @param user_id User identifier
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def list_activities(transaction_id, user_id, opts = {})
      list_activities_with_http_info(transaction_id, user_id, opts)
      nil
    end

    # List activities
    # List new activity data. After successfully initiating a transaction, activity summaries included within it can be retrieved with the provided transactionId.
    # @param transaction_id Transaction identifier
    # @param user_id User identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def list_activities_with_http_info(transaction_id, user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DailyActivityApi.list_activities ...'
      end
      # verify the required parameter 'transaction_id' is set
      if @api_client.config.client_side_validation && transaction_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_id' when calling DailyActivityApi.list_activities"
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling DailyActivityApi.list_activities"
      end
      # resource path
      local_var_path = '/v3/users/{user-id}/activity-transactions/{transaction-id}'.sub('{' + 'transaction-id' + '}', transaction_id.to_s).sub('{' + 'user-id' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DailyActivityApi#list_activities\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
